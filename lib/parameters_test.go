package lib

import (
	"testing"
	"math/rand"

	"github.com/stretchr/testify/assert"
)

func TestNewParameters(t *testing.T) {
	rand.Seed(1) // testable / static results

	weightsExpected := [][][]float64{
		{},
		{
			{
				-0.01233758177597947,
				-0.0012634751070237293,
				-0.005209945711531503,
				0.022857191176995802,
				0.003228052526115799,
			},
			{
				0.005900672875996937,
				0.0015880774017643562,
				0.009892020842955818,
				-0.007312830161774791,
				0.006863807850359727,
			},
			{
				0.01585403962280623,
				0.008382059044208105,
				0.012988408475174342,
				0.0052735839305986165,
				0.007324419258045132,
			},
			{
				-0.010731798210887525,
				0.007001209024399848,
				0.004315307186960532,
				0.009996261210112625,
				-0.015239676725278933,
			},
		},
		{
			{
				-0.0031653724289408824,
				0.018894642062634817,
				0.011007291937500208,
				-0.009927431907514368,
			},
			{
				0.009897104202085316,
				-0.006152234852777649,
				-0.014350469221322283,
				-0.021514366827426447,
			},
			{
				0.0013735037357335078,
				0.004428226270265666,
				-0.008460943734555972,
				-0.000827950341361492,
			},
		},
	}

	biasExpected := [][][]float64{
		{},
		{{0}, {0}, {0}, {0}},
		{{0}, {0}, {0}},
	}

	layers := []int{5, 4, 3}
	parameters := NewParameters(layers)

	for i := 1; i < len(layers); i++ {
		nodes := layers[i]
		for n := 0; n < nodes; n++ {
			assert.Equal(t, weightsExpected[i][n], parameters.Weights[i].RawRowView(n))
			assert.Equal(t, biasExpected[i][n], parameters.Bias[i].RawRowView(n))
		}
	}
}
